{
    "Basic concepts": "language/basic_concepts",
    "Comments": "comments",
    "ASCII chart": "language/ascii",
    "Names and identifiers": "language/name",
    "Types": "language/type-id",
    "Fundamental types": "language/types",
    "Object": "language/objects",
    "Scope": "language/scope",
    "Lifetime": "language/lifetime",
    "Definitions and ODR": "language/definition",
    "Name lookup": "language/lookup",
    "qualified": "language/qualified_lookup",
    "unqualified": "language/unqualified_lookup",
    "As-if rule": "language/as_if",
    "Undefined behavior": "language/ub",
    "Memory model and data races": "language/memory_model",
    "Phases of translation": "language/translation_phases",
    "The main() function": "language/main_function",
    "Modules": "language/modules",
    "C++ Keywords": "keywords",
    "Preprocessor": "preprocessor",
    "#if - #ifdef - #else - #endif": "preprocessor/conditional",
    "#define - # - ##": "preprocessor/replace",
    "#include": "preprocessor/include",
    "#error": "preprocessor/error",
    "#pragma": "preprocessor/impl",
    "#line": "preprocessor/line",
    "Expressions": "language/expressions",
    "Value categories": "language/value_category",
    "Evaluation order and sequencing": "language/eval_order",
    "Constant expressions": "language/constant_expression",
    "Operators": "language/expressions#Operators",
    "assignment": "language/operator_assignment",
    "arithmetic": "language/operator_arithmetic",
    "increment and decrement": "language/operator_incdec",
    "logical": "language/operator_logical",
    "comparison": "language/operator_comparison",
    "member access and indirection": "language/operator_member_access",
    "call, comma, ternary": "language/operator_other",
    "sizeof": "language/sizeof",
    "alignof": "language/alignof",
    "new": "language/new",
    "delete": "language/delete",
    "typeid": "language/typeid",
    "Operator overloading": "language/operators",
    "Default comparisons": "language/default_comparisons",
    "Operator precedence": "language/operator_precedence",
    "Conversions": "language/expressions#Conversions",
    "implicit": "language/implicit_cast",
    "explicit": "language/explicit_cast",
    "user-defined": "language/user_literal",
    "static_cast": "language/static_cast",
    "dynamic_cast": "language/dynamic_cast",
    "const_cast": "language/const_cast",
    "reinterpret_cast": "language/reinterpret_cast",
    "Literals": "language/expressions#Literals",
    "boolean": "language/bool_literal",
    "integer": "language/integer_literal",
    "floating": "language/floating_literal",
    "character": "language/character_literal",
    "string": "language/string_literal",
    "nullptr": "language/nullptr",
    "Declaration": "language/declarations",
    "Namespace declaration": "language/namespace",
    "Namespace alias": "language/namespace_alias",
    "Lvalue and rvalue references": "language/reference",
    "Pointers": "language/pointer",
    "Arrays": "language/array",
    "Structured bindings": "language/structured_binding",
    "Enumerations and enumerators": "language/enum",
    "Storage duration and linkage": "language/storage_duration",
    "Language linkage": "language/language_linkage",
    "inline specifier": "language/inline",
    "Inline assembly": "language/asm",
    "const / volatile": "language/cv",
    "constexpr": "language/constexpr",
    "decltype": "language/decltype",
    "auto": "language/auto",
    "alignas": "language/alignas",
    "typedef": "language/typedef",
    "Type alias": "language/type_alias",
    "Elaborated type specifiers": "language/elaborated_type_specifier",
    "Attributes": "language/attributes",
    "static_assert": "language/static_assert",
    "Initialization": "language/initialization",
    "Default initialization": "language/default_initialization",
    "Value initialization": "language/value_initialization",
    "Copy initialization": "language/copy_initialization",
    "Direct initialization": "language/direct_initialization",
    "Aggregate initialization": "language/aggregate_initialization",
    "List initialization": "language/list_initialization",
    "Reference initialization": "language/reference_initialization",
    "Static non-local initialization": "language/initialization#Non-local_variables",
    "zero": "language/zero_initialization",
    "constant": "language/constant_initialization",
    "Dynamic non-local initialization": "language/initialization#Non-local_variables",
    "ordered": "language/initialization#Non-local_variables",
    "unordered": "language/initialization#Non-local_variables",
    "Copy elision": "language/copy_elision",
    "Functions": "language/functions",
    "Function declaration": "language/function",
    "Default arguments": "language/default_arguments",
    "Variadic arguments": "language/variadic_arguments",
    "Lambda expression": "language/lambda",
    "Argument-dependent lookup": "language/adl",
    "Overload resolution": "language/overload_resolution",
    "Address of an overload set": "language/overloaded_address",
    "Coroutines": "language/coroutines",
    "Statements": "language/statements",
    "if": "language/if",
    "switch": "language/switch",
    "for": "language/for",
    "range- for": "language/range-for",
    "while": "language/while",
    "do - while": "language/do",
    "continue": "language/continue",
    "break": "language/break",
    "goto": "language/goto",
    "return": "language/return",
    "synchronized and atomic": "language/transactional_memory",
    "Classes": "language/classes",
    "Class types": "language/class",
    "Union types": "language/union",
    "injected-class-name": "language/injected-class-name",
    "Data members": "language/data_members",
    "Member functions": "language/member_functions",
    "Static members": "language/static",
    "Nested classes": "language/nested_classes",
    "Derived class": "language/derived_class",
    "using -declaration": "language/using_declaration",
    "Empty base optimization": "language/ebo",
    "Virtual function": "language/virtual",
    "Abstract class": "language/abstract_class",
    "override": "language/override",
    "final": "language/final",
    "Member access": "language/access",
    "friend": "language/friend",
    "Bit fields": "language/bit_field",
    "The this pointer": "language/this",
    "Constructors and member initializer lists": "language/constructor",
    "Default constructor": "language/default_constructor",
    "Destructor": "language/destructor",
    "Copy constructor": "language/copy_constructor",
    "Copy assignment": "language/as_operator",
    "Move constructor": "language/move_constructor",
    "Move assignment": "language/move_operator",
    "Converting constructor": "language/converting_constructor",
    "explicit specifier": "language/explicit",
    "Templates": "language/templates",
    "Template parameters and arguments": "language/template_parameters",
    "Class template": "language/class_template",
    "Function template": "language/function_template",
    "Class member template": "language/member_template",
    "Variable template": "language/variable_template",
    "Template argument deduction": "language/template_argument_deduction",
    "Explicit specialization": "language/template_specialization",
    "Class template argument deduction": "language/deduction_guide",
    "Partial specialization": "language/partial_specialization",
    "Parameter packs": "language/parameter_pack",
    "sizeof...": "language/sizeof...",
    "Fold-expressions": "language/fold",
    "Dependent names": "language/dependent_name",
    "SFINAE": "language/sfinae",
    "Constraints and concepts": "language/constraints",
    "Exceptions": "language/exceptions",
    "throw -expression": "language/throw",
    "try - catch block": "language/try_catch",
    "function- try -block": "language/function-try-block",
    "noexcept specifier": "language/noexcept_spec",
    "noexcept operator": "language/noexcept",
    "Dynamic exception specification": "language/except_spec",
    "History of C++": "language/history",
    "Extending the namespace std": "language/extending_std",
    "Acronyms": "language/acronyms",
    "Resource acquisition is initialization": "language/raii",
    "Rule of three/five/zero": "language/rule_of_three",
    "Pointer to implementation": "language/pimpl"
}